# 워크플로우의 이름을 지정합니다.
name: Deploy to AWS EC2

# 워크플로우가 언제 실행될지 정의합니다. (main 브랜치에 push될 때)
on:
  push:
    branches:
      - main

# 실행될 작업(job)들을 정의합니다.
jobs:
  build-and-deploy:
    # 작업이 실행될 환경을 지정합니다. (최신 우분투)
    runs-on: ubuntu-latest

    # 작업의 단계(step)들을 정의합니다.
    steps:
      # 1. 소스 코드 가져오기 (Checkout)
      - name: Checkout
        uses: actions/checkout@v3

      # 2. JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. gradlew 파일에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. 프로젝트 빌드 및 테스트 (CI)
      - name: Build with Gradle
        run: ./gradlew build
        env:
          # GitHub Secrets에 등록된 값을 환경변수로 주입합니다.
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY }}
          KAKAO_ADMIN_KEY: ${{ secrets.KAKAO_ADMIN_KEY }}
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}

      # 5. 빌드된 JAR 파일을 EC2 서버로 전송 (CD)
      - name: SCP to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "./build/libs/*.jar" # 빌드된 모든 .jar 파일을
          target: "/home/ubuntu"       # 서버의 /home/ubuntu 폴더로 보냅니다.

      # 6. EC2 서버에서 배포 스크립트 실행
      - name: Execute deploy script on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            chmod +x /home/ubuntu/deploy.sh
            /home/ubuntu/deploy.sh
